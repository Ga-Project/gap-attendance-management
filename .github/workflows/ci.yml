name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-lint:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.0
          bundler-cache: true
          working-directory: backend
          
      - name: Run Rubocop
        run: |
          cd backend
          bundle exec rubocop

  frontend-lint:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Run ESLint
        run: |
          cd frontend
          npm run lint

  backend-tests:
    runs-on: ubuntu-latest
    needs: backend-lint
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: attendance_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.0
          bundler-cache: true
          working-directory: backend
          
      - name: Set up database
        run: |
          cd backend
          bundle exec rails db:create db:migrate
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/attendance_test
          RAILS_ENV: test
          
      - name: Run RSpec tests
        run: |
          cd backend
          bundle exec rspec
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/attendance_test
          RAILS_ENV: test

  frontend-tests:
    runs-on: ubuntu-latest
    needs: frontend-lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Run tests
        run: |
          cd frontend
          npm test -- --coverage --watchAll=false